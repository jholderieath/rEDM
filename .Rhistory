tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, sep = " + ")
}
dem_eqns
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
dem_eqns
tick <- 0
temp <- list()
dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
dem_eqns
tick <- 0
temp <- list()
#dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
dem_eqns
rm(dem_eqns)
tick <- 0
temp <- list()
#dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
tick <- 0
temp <- list()
supply <- list()
for (s in suppliers) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",s,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("ss",c,s,sep = "_")
supply[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
supply
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("ss",c,sep = "_")
sup_elements <- str_subset(supply,regex_tmp)
sup_eqns[tick] <- paste(sup_elements, collapse = " + ")
}
tick <- 0
sup_eqns <- list()
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("ss",c,sep = "_")
sup_elements <- str_subset(supply,regex_tmp)
sup_eqns[tick] <- paste(sup_elements, collapse = " + ")
}
sup_eqns
#generate equations
# demand eq
gen_eq <- function(variables,crops,markets,suppliers,price_changes) {
tick <- 0
temp <- list()
dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
#create portions of the supply equation
tick <- 0
temp <- list()
supply <- list()
for (s in suppliers) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",s,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("ss",c,s,sep = "_")
supply[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
#put portions of supply equations together
tick <- 0
sup_eqns <- list()
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("ss",c,sep = "_")
sup_elements <- str_subset(supply,regex_tmp)
sup_eqns[tick] <- paste(sup_elements, collapse = " + ")
}
#combine into a system of equations
eqns <- pmap_chr(list(dem_eqns,sup_eqns),paste, sep = " , ")
eqns2 <- paste0("Eq(",eqns,")")
eqns3 <- map2_chr(crops,eqns2,paste, sep = " = ")
eqns4 <- paste0("sympy('",eqns3,"')")
eval(parse(text = eqns4))
return(eqns4)
}
gen_edm <- function(crops,markets,suppliers,list_of_elasticities) {
#generate variables
mkt_weight <- gmw(crops = crops, markets = markets)
sup_weight <- gsw(crops = crops, suppliers = suppliers)
me <- gme(crops = crops,markets = markets,crossprice = crops)
se <- gse(crops = crops,suppliers =  suppliers,crossprice = crops)
EP <- gen_price_chg(crops)
mwl <- unlist(mkt_weight)
swl <- unlist(sup_weight)
# set variables in sympy
variables <- c(mwl,swl,me,se,EP)
for (i in variables) {
tmp <- paste0(noquote(i)," <- Var('",i,"')")
eval(parse(text=tmp))
}
#generate equations
# demand eq
gen_eq <- function(variables,crops,markets,suppliers,price_changes) {
tick <- 0
temp <- list()
dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
#create portions of the supply equation
tick <- 0
temp <- list()
supply <- list()
for (s in suppliers) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",s,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("ss",c,s,sep = "_")
supply[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
#put portions of supply equations together
tick <- 0
sup_eqns <- list()
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("ss",c,sep = "_")
sup_elements <- str_subset(supply,regex_tmp)
sup_eqns[tick] <- paste(sup_elements, collapse = " + ")
}
#combine into a system of equations
eqns <- pmap_chr(list(dem_eqns,sup_eqns),paste, sep = " , ")
eqns2 <- paste0("Eq(",eqns,")")
eqns3 <- map2_chr(crops,eqns2,paste, sep = " = ")
eqns4 <- paste0("sympy('",eqns3,"')")
eval(parse(text = eqns4))
return(eqns4)
}
}
library(rSymPy)
library(purrr)
library(stringr)
library(tibble)
crops <- c("corn","soy","wheat",'rice','peanut')
markets <- c("domestic","export")
suppliers <- c("imports","AOS","FRS")
# Generate weights ------------------
gen_mkt_weights <- function(crops,markets) {
tmp <- vector()
tick <- 0
for (i in crops) {
for (n in markets) {
tick <- tick + 1
tmp[tick] <- paste('w',n,i,sep = "_")
}
}
return(tmp)
}
gmw <- function(crops,markets) {
mkt_weight <- map_dfc(markets,gen_mkt_weights,crops)
names(mkt_weight) <- markets
return(mkt_weight)
}
gen_sup_weights <- function(crops,suppliers){
tmp <- vector()
tick <- 0
for (i in crops) {
for (n in suppliers) {
tick <- tick + 1
tmp[tick] <- paste('ss',n,i,sep = "_")
}
}
return(tmp)
}
gsw <- function(crops,suppliers) {
sup_weight <- map_dfc(suppliers,gen_sup_weights,crops)
names(sup_weight) <- suppliers
return(sup_weight)
}
# Generate Elasticities-------------------------------
gen_mkt_elast <- function(crops,markets,crossprice) {
tmp <- vector()
tick <- 0
for (i in crops) {
for (n in markets) {
tick <- tick + 1
tmp[tick] <- paste('e',n,crossprice,i,sep = "_")
}
}
return(tmp)
}
gme <- function(crops,markets,crossprice) {
me <- list()
tick <- 0
for (i in markets) {
for (j in crops) {
for (k in crossprice) {
tick <- tick + 1
me[tick] <- gen_mkt_elast(crops = j,markets = i,crossprice = k)
}
}
}
return(me)
}
gen_sup_elast <- function(crops,suppliers,crossprice){
tmp <- vector()
tick <- 0
for (i in crops) {
for (n in suppliers) {
tick <- tick + 1
tmp[tick] <- paste('e',n,crossprice,i,sep = "_")
}
}
return(tmp)
}
gse <- function(crops,suppliers,crossprice) {
me <- list()
tick <- 0
for (i in suppliers) {
for (j in crops) {
for (k in crossprice) {
tick <- tick + 1
me[tick] <- gen_sup_elast(crops = j,suppliers = i,crossprice = k)
}
}
}
return(me)
}
# Generate Price Changes------------------------------
gen_price_chg <- function(crops){
tmp <- vector()
tick <- 0
for (i in crops) {
tick <- tick + 1
tmp[tick] <- paste('EP',i,sep = "_")
}
return(tmp)
}
EP <- gen_price_chg(crops)
# create equations---------------------
gen_edm <- function(crops,markets,suppliers,list_of_elasticities) {
#generate variables
mkt_weight <- gmw(crops = crops, markets = markets)
sup_weight <- gsw(crops = crops, suppliers = suppliers)
me <- gme(crops = crops,markets = markets,crossprice = crops)
se <- gse(crops = crops,suppliers =  suppliers,crossprice = crops)
EP <- gen_price_chg(crops)
mwl <- unlist(mkt_weight)
swl <- unlist(sup_weight)
# set variables in sympy
variables <- c(mwl,swl,me,se,EP)
for (i in variables) {
tmp <- paste0(noquote(i)," <- Var('",i,"')")
eval(parse(text=tmp))
}
#generate equations
# demand eq
gen_eq <- function(variables,crops,markets,suppliers,price_changes) {
tick <- 0
temp <- list()
dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
#create portions of the supply equation
tick <- 0
temp <- list()
supply <- list()
for (s in suppliers) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",s,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("ss",c,s,sep = "_")
supply[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
#put portions of supply equations together
tick <- 0
sup_eqns <- list()
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("ss",c,sep = "_")
sup_elements <- str_subset(supply,regex_tmp)
sup_eqns[tick] <- paste(sup_elements, collapse = " + ")
}
#combine into a system of equations
eqns <- pmap_chr(list(dem_eqns,sup_eqns),paste, sep = " , ")
eqns2 <- paste0("Eq(",eqns,")")
eqns3 <- map2_chr(crops,eqns2,paste, sep = " = ")
eqns4 <- paste0("sympy('",eqns3,"')")
eval(parse(text = eqns4))
return(eqns4)
}
}
gen_edm <- function(crops,markets,suppliers) {
#generate variables
mkt_weight <- gmw(crops = crops, markets = markets)
sup_weight <- gsw(crops = crops, suppliers = suppliers)
me <- gme(crops = crops,markets = markets,crossprice = crops)
se <- gse(crops = crops,suppliers =  suppliers,crossprice = crops)
EP <- gen_price_chg(crops)
mwl <- unlist(mkt_weight)
swl <- unlist(sup_weight)
# set variables in sympy
variables <- c(mwl,swl,me,se,EP)
for (i in variables) {
tmp <- paste0(noquote(i)," <- Var('",i,"')")
eval(parse(text=tmp))
}
#generate equations
# demand eq
gen_eq <- function(variables,crops,markets,suppliers,price_changes) {
tick <- 0
temp <- list()
dem_eqns <- list()
# create portions of the demand equation
for (m in markets) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",m,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("w",c,m,sep = "_")
demand[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
# put portions of demand equations together
tick <- 0
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("w",c,sep = "_")
dem_elements <- str_subset(demand,regex_tmp)
dem_eqns[tick] <- paste(dem_elements, collapse = " + ")
}
#create portions of the supply equation
tick <- 0
temp <- list()
supply <- list()
for (s in suppliers) {
for (c in crops) {
tick = tick + 1
regex_tmp <- paste("e",s,c,sep = "_")
pe_tmp <- str_subset(variables,regex_tmp)
eq <- paste(pe_tmp,EP,sep=' * ') %>%
paste(collapse = " + ")
temp[tick] <- paste0('(',eq,')')
regex_tmp <- paste("ss",c,s,sep = "_")
supply[tick] <- paste(regex_tmp,temp[tick],sep = ' * ')
}
}
#put portions of supply equations together
tick <- 0
sup_eqns <- list()
for (c in crops) {
tick <- tick + 1
regex_tmp <- paste("ss",c,sep = "_")
sup_elements <- str_subset(supply,regex_tmp)
sup_eqns[tick] <- paste(sup_elements, collapse = " + ")
}
#combine into a system of equations
eqns <- pmap_chr(list(dem_eqns,sup_eqns),paste, sep = " , ")
eqns2 <- paste0("Eq(",eqns,")")
eqns3 <- map2_chr(crops,eqns2,paste, sep = " = ")
eqns4 <- paste0("sympy('",eqns3,"')")
eval(parse(text = eqns4))
return(eqns4)
}
}
trial <- gen_edm(crops = crops,markets = markets,suppliers = suppliers)
View(trial)
